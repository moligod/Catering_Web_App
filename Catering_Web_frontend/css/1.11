// 定义了一个名为renderPagination的函数，用于渲染分页控件。
        function renderPagination() {
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = ''; // 清空当前分页内容

            // 创建上一页按钮
            const prevButton = document.createElement('button');
            prevButton.textContent = '<';
            // 如果是第一页，则禁用上一页按钮
            prevButton.disabled = currentPage === 1;
            prevButton.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    renderItems(currentPage);
                    renderPagination();
                }
            });
            // 将上一页按钮添加到分页控件中
            pagination.appendChild(prevButton);

            // 计算并创建页码按钮
            const maxButtons = 8; // 显示的按钮数量
            const startPage = Math.max(1, currentPage - Math.floor(maxButtons / 2));
            const endPage = Math.min(totalPages, startPage + maxButtons - 1);

            for (let i = startPage; i <= endPage; i++) {
                const pageButton = document.createElement('span');
                pageButton.textContent = i;
                pageButton.className = currentPage === i ? 'page-number active' : 'page-number';
                pageButton.addEventListener('click', () => {
                    currentPage = i;
                    renderItems(currentPage);
                    renderPagination();
                });
                pagination.appendChild(pageButton);
            }

            // 创建下一页按钮
            const nextButton = document.createElement('button');
            nextButton.textContent = '>';
            nextButton.disabled = currentPage === totalPages; // 如果是最后一页，则禁用下一页按钮
            nextButton.addEventListener('click', () => {
                if (currentPage < totalPages) {
                    currentPage++;
                    renderItems(currentPage);
                    renderPagination();
                }
            });
            pagination.appendChild(nextButton);

            // 创建跳至页码的输入框
            const jumpToPageInput = document.createElement('input');
            jumpToPageInput.type = 'text';
            jumpToPageInput.placeholder = '页';
            jumpToPageInput.className = 'jump-to-page-input';
            pagination.appendChild(jumpToPageInput);

            // 创建跳至页码的按钮
            const jumpToPageButton = document.createElement('button');
            jumpToPageButton.textContent = '跳至 页';
            jumpToPageButton.className = 'jump-to-page-button';
            jumpToPageButton.addEventListener('click', () => {
                const page = parseInt(jumpToPageInput.value, 10) || 1;
                if (page >= 1 && page <= totalPages) {
                    currentPage = page;
                    renderItems(currentPage);
                    renderPagination();
                } else {
                    // Handle invalid input, e.g., display an alert or clear the input
                    alert('请输入有效的页码！');
                    jumpToPageInput.value = '';
                }
            });
            pagination.appendChild(jumpToPageButton);


            // 创建添加菜品的按钮
            const addButton = document.createElement('button');
            addButton.textContent = '添加菜品';
            addButton.id = 'openModalBtn';
            addButton.addEventListener('click', () => {
                //在当前界面弹出添加菜品的表单，代码通过导入Dishesadd.html文件实现,且这个文件是悬浮在当前界面上的
                // 获取打开模态框的按钮和模态框本身
                var openModalBtn = document.getElementById("openModalBtn");
                var modal = document.getElementById("myModal");

                // 获取关闭按钮
                var closeBtn = document.getElementsByClassName("close")[0];

                // 点击打开按钮时，显示模态框
                openModalBtn.onclick = function () {
                    modal.style.display = "block";
                }

                // 点击关闭按钮时，隐藏模态框
                closeBtn.onclick = function () {
                    modal.style.display = "none";
                }

                // 点击模态框外部区域时，隐藏模态框
                window.onclick = function (event) {
                    if (event.target == modal) {
                        modal.style.display = "none";
                    }
                }
            });
            pagination.appendChild(addButton);

        }